Binary Search Introduction ------------------------------------------------->
    > With a sorted data set, we can take advantage of the ordering to 
    perform a search which is more efficient than going element by element.

    > Binary search requires a sorted data set. You then complete the steps:
        1️⃣ Check the middle value of the data set
            2️⃣ if this value matches the target, return the index
        3️⃣ If the middle value is less than the target:
            4️⃣ start at step 1 using the right half of the list
        5️⃣ If the middle value is greater than our target:
            6️⃣ start at step 1 using the left half of the list

    > Visualize Binary search as a dictionary. If you're looking for the word
    'telescope', you would open the book near the end. For example, if you
    happen to flip to the 'R' words, you'll know to look backwards for the 
    'T' section. If you flipped to the 'V' words, you'll know yo look forwards 
    to the 'T' section.

Time Complexity of Binary Search ------------------------------------------->
    > In each iteration, we cut the list in half. The time complexity is
    O(log N).